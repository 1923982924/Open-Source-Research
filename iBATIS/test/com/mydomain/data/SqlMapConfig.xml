<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE sqlMapConfig      
    PUBLIC "-//ibatis.apache.org//DTD SQL Map Config 2.0//EN"      
    "http://ibatis.apache.org/dtd/sql-map-config-2.dtd">

<!--必须严格按照这样的顺序，否则会有语法错误:
<!ELEMENT sqlMapConfig (properties?, settings?, resultObjectFactory?, typeAlias*, typeHandler*, transactionManager?, sqlMap+)+>
-->


<sqlMapConfig>
  <!--
  <properties name="myvar3" value="myvalue3" />
  <properties name="myvar4" value="aa ${myvar1} bb" />
  <properties name="url" value="" />
  -->


  <!--
  //最多只能定义一个properties子元素
  //properties元素有两个属性:resource与url，
  //只要设置其中之一就可以了，如果两者都设置了，优先用resource属性的值
  <properties url="resource" />
  <properties resource="" />
  -->

  <!--<properties url="" resource="my/debug.properties"/>-->

  <!-- url的格式很难记，所以还是用resource比较好，resource是基于classpath的-->
  <!--<properties url="${addGlobalPropNodeletsTest}"/>-->


  <!-- 有错误 -->
  <!-- <settings cacheModelsEnabled="true" useStatementNamespaces="true" />-->

  <!--<settings cacheModelsEnabled="true" />
  <settings defaultStatementTimeout="1000" useStatementNamespaces="true" forceMultipleResultSetSupport="true"/>-->

  
  <resultObjectFactory type="com.mydomain.MyResultObjectFactory">
    <property name="name1" value="value1"/>
    <property name="name2" value="value2"/>
  </resultObjectFactory>

  <typeAlias alias="MyAccount1" type="com.mydomain.domain.Account"/>
  <typeAlias alias="MyAccount2" type="com.mydomain.domain.Account"/>

  <typeAlias alias="YesNoBoolTypeHandler" type="com.mydomain.YesNoBoolTypeHandler"/>
  <typeAlias alias="YesNoBoolTypeHandlerCallback" type="com.mydomain.YesNoBoolTypeHandlerCallback"/>

  <typeHandler javaType="YesNoBoolTypeHandler" jdbcType="BOOLEAN" callback="YesNoBoolTypeHandlerCallback" />

  <typeHandler javaType="YesNoBoolTypeHandler" jdbcType="BOOL" callback="YesNoBoolTypeHandlerCallback" />


  <!-- <properties url="">-->
  <!-- <properties ddd="aaa">-->
  <!-- <properties resource="abc" url="def"/>-->
  <!-- 测试TypeHandlerFactory.putTypeAlias -->
  <!-- <typeAlias alias="JDBC" type="com.mydomain.domain.Account"/>-->
  <!-- <resultObjectFactory type="implements ResultObjectFactory"/> -->

  <!-- Configure a built-in transaction manager.  If you're using an 
       app server, you probably want to use its transaction manager 
       and a managed datasource -->
  <transactionManager type="JDBC" commitRequired="true">
    <dataSource type="SIMPLE">
      <property name="JDBC.Driver" value="org.hsqldb.jdbcDriver"/>
      <property name="JDBC.ConnectionURL" value="jdbc:hsqldb:."/>
      <property name="JDBC.Username" value="sa"/>
      <property name="JDBC.Password" value="sa"/>

  </transactionManager>

  <!-- List the SQL Map XML files. They can be loaded from the 
       classpath, as they are here (com.domain.data...) -->

  <!-- 至少要有一个sqlMap -->
  <sqlMap resource="com/mydomain/data/Account.xml"/>
  <!-- List more here...
  <sqlMap resource="com/mydomain/data/Order.xml"/>
  <sqlMap resource="com/mydomain/data/Documents.xml"/>
  -->

</sqlMapConfig>
